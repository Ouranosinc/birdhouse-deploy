##############################################################################
# Configuration vars, set in env.local before sourcing this file.
# This job assume the "scheduler" component is enabled.
##############################################################################

# Cronjob schedule to trigger deployment attempt.
if [ -z "$DEPLOY_RAVEN_TESTDATA_SCHEDULE" ]; then
    DEPLOY_RAVEN_TESTDATA_SCHEDULE="*/30 * * * *"  # UTC
fi

# Location for local cache of git clone to save bandwidth and time from always
# re-cloning from scratch.
if [ -z "$DEPLOY_RAVEN_TESTDATA_CHECKOUT_CACHE" ]; then
    DEPLOY_RAVEN_TESTDATA_CHECKOUT_CACHE="/data/deploy_data_cache/deploy_raven_testdata_to_thredds"
fi

# Location of deploy-data config file.
# Provide a different config file to sync to a different location or include
# more files in the sync.
if [ -z "$DEPLOY_RAVEN_TESTDATA_CONFIG" ]; then
    DEPLOY_RAVEN_TESTDATA_CONFIG="${COMPOSE_DIR}/deployment/deploy-data-raven-testdata-to-thredds.yml"
fi

# Log file location.  Default location under /var/log/PAVICS/ has built-in logrotate.
if [ -z "$DEPLOY_RAVEN_TESTDATA_LOGFILE" ]; then
    DEPLOY_RAVEN_TESTDATA_LOGFILE="/var/log/PAVICS/deploy_raven_testdata_to_thredds.log"
fi

# Location of ssh private key for git clone over ssh, useful for private repos.
# Raven do not need this since Raven repo is public so cloning over https.
# This is here in case a custom config file is supplied with additional repos.
#DEPLOY_RAVEN_TESTDATA_GIT_SSH_IDENTITY_FILE="/path/to/id_rsa"
#DEPLOY_RAVEN_TESTDATA_GIT_SSH_IDENTITY_FILE=/home/vagrant/.ssh/id_rsa_git_ssh_read_only

##############################################################################
# End configuration vars
##############################################################################


if [ -z "`echo "$AUTODEPLOY_EXTRA_SCHEDULER_JOBS" | grep deploy_raven_testdata_to_thredds`" ]; then

    # Add job only if not already added (config is read twice during
    # autodeploy process.

    LOGFILE_DIRNAME="`dirname "$DEPLOY_RAVEN_TESTDATA_LOGFILE"`"

    EXTRA_DOCKER_ARGS=""
    if [ -n "$DEPLOY_RAVEN_TESTDATA_GIT_SSH_IDENTITY_FILE" ]; then
        EXTRA_DOCKER_ARGS="
    --volume ${DEPLOY_RAVEN_TESTDATA_GIT_SSH_IDENTITY_FILE}:${DEPLOY_RAVEN_TESTDATA_GIT_SSH_IDENTITY_FILE}:ro
    --env DEPLOY_DATA_GIT_SSH_IDENTITY_FILE=${DEPLOY_RAVEN_TESTDATA_GIT_SSH_IDENTITY_FILE}"
    fi

    export AUTODEPLOY_EXTRA_SCHEDULER_JOBS="
$AUTODEPLOY_EXTRA_SCHEDULER_JOBS

- name: deploy_raven_testdata_to_thredds
  comment: Auto-deploy Raven testdata to Thredds for Raven tutorial notebooks.
  schedule: '$DEPLOY_RAVEN_TESTDATA_SCHEDULE'
  command: '/deploy-data ${DEPLOY_RAVEN_TESTDATA_CONFIG}'
  dockerargs: >-
    --rm --name deploy_raven_testdata_to_thredds
    --volume /var/run/docker.sock:/var/run/docker.sock:ro
    --volume ${COMPOSE_DIR}/deployment/deploy-data:/deploy-data:ro
    --volume ${DEPLOY_RAVEN_TESTDATA_CONFIG}:${DEPLOY_RAVEN_TESTDATA_CONFIG}:ro
    --volume ${DEPLOY_RAVEN_TESTDATA_CHECKOUT_CACHE}:${DEPLOY_RAVEN_TESTDATA_CHECKOUT_CACHE}:rw
    --volume ${LOGFILE_DIRNAME}:${LOGFILE_DIRNAME}:rw
    --env DEPLOY_DATA_CHECKOUT_CACHE=${DEPLOY_RAVEN_TESTDATA_CHECKOUT_CACHE}
    --env DEPLOY_DATA_LOGFILE=${DEPLOY_RAVEN_TESTDATA_LOGFILE} ${EXTRA_DOCKER_ARGS}
  image: 'docker:19.03.6-git'
"

fi
