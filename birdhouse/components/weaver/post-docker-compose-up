#!/bin/sh

WEAVER_URL="https://${PAVICS_FQDN_PUBLIC}${TWITCHER_PROTECTED_PATH}/${WEAVER_MANAGER_NAME}"
WEAVER_PROVIDER_BIRDS_MAX_TIME=${WEAVER_PROVIDER_BIRDS_MAX_TIME:-60}

# logging
YELLOW=${YELLOW:-$(tput setaf 3)}
RED=${RED:-$(tput setaf 1)}
NORMAL=${NORMAL:-$(tput sgr0)}
ERROR="${RED}ERROR${NORMAL}: "
WARNING="${YELLOW}WARNING${NORMAL}: "
PREFIX="[Weaver] "

if [ -z "${WEAVER_PROVIDER_BIRDS}" ]; then
    echo "${WARNING}No birds specified in WEAVER_PROVIDER_BIRDS to register WPS remote providers."
    exit 0
fi

start_time="$(date -u +%s)"

ret=1
for bird in ${WEAVER_PROVIDER_BIRDS}; do
    bird_name=$(${bird} | cut -f 1 -d ';')
    bird_url=$(${bird} | cut -f 2 -d ';')

    code=500
    while [ ${ret} -gt 0 ] && [ ${code} -ne 200 ]; do
        # request the url and obtain the body+http code, then split them
        resp=$(curl -k -s -w "\n%{http_code}" "${bird_url}")
        ret=$?   # in case not up yet
        code=$(echo "${resp}" | tail -n -1)
        body=$(echo "${resp}" | head -n -1)

        # interrupt if max time reached
        next_time="$(date -u +%s)"
        delta_time=$((${next_time}-${start_time}))
        if [ ${delta_time} -ge ${WEAVER_PROVIDER_BIRDS_MAX_TIME} ]; then
            echo "${ERROR}Failed to register all birds specified in WEAVER_PROVIDER_BIRDS."
            exit 1
        fi
    done

    # unregister in case of multiple up/down to regenerate from scratch, don't care if NotFound returned
    echo "${PREFIX}Unregistering any remote bird matching [${bird_name}]"
    curl -k -s -w "[Weaver] Delete [${bird_name}]: %{http_code}" -o /dev/null \
         -X DELETE "${WEAVER_URL}/providers/${bird_name}"

    # register the new provider and validate
    echo "${PREFIX}Registering remote bird [${bird_name}] on [${bird_url}]"
    curl -H "Content-Type: application/json" -X POST -d '{"": "", "": ""}'


done

