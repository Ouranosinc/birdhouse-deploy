#!/bin/sh
# Renew LetsEncrypt SSL certificate using certbot docker image.
#
# Important:
# * SUPPORT_EMAIL from env.local is used as renew email, make sure it's valid!
# * certbot requires your port 80 and 443 be accessible directly on the internet
#
# Useful extra options:
# * more --domain
# * --cert-name  # to avoid automatic /etc/letsencrypt/live/DOMAIN-0001 "safe" naming
# * --staging
# * --dry-run
#
# Port 80 and 443 must be free at the time of invoking this script
# (pavics-compose.sh stop proxy)
#
# Setting environment variable FORCE_CERTBOT_RENEW=1 when calling this script
# will perform all needed pre and post actions for renewal:
# * pavics-compose.sh stop proxy
# * perform the renewal
# * concat the fullchain.pem and privkey.pem to the proper location
# * pavics-compose.sh start proxy

THIS_FILE="`realpath "$0"`"
THIS_DIR="`dirname "$THIS_FILE"`"
SAVED_PWD="`pwd`"

# Default values
. $THIS_DIR/../default.env

if [ -e "$THIS_DIR/../env.local" ]; then
    # Override default values
    . $THIS_DIR/../env.local
fi

set -x

CERT_DOMAIN="$PAVICS_FQDN_PUBLIC"
if [ -z "$CERT_DOMAIN" ]; then
    CERT_DOMAIN="$PAVICS_FQDN"
fi

EXTRA_CERTBOT_OPTS=""
if [ ! -z "$FORCE_CERTBOT_RENEW" ]; then
    EXTRA_CERTBOT_OPTS="--cert-name $CERT_DOMAIN"
    cd $THIS_DIR/..
    ./pavics-compose.sh stop proxy
    cd $SAVED_PWD
fi

docker run --rm --name certbot \
  -v "/etc/letsencrypt:/etc/letsencrypt" \
  -v "/var/lib/letsencrypt:/var/lib/letsencrypt" \
  -v "/var/log/letsencrypt:/var/log/letsencrypt" \
  -p 443:443 -p 80:80 \
  certbot/certbot:v1.3.0 \
  certonly \
  --non-interactive \
  --agree-tos \
  --no-eff-email \
  --standalone \
  --email $SUPPORT_EMAIL \
  --domain $CERT_DOMAIN $EXTRA_CERTBOT_OPTS \
  "$@"
RC=$?

if [ ! -z "$FORCE_CERTBOT_RENEW" ]; then
    CERTPATH="/etc/letsencrypt/live/$CERT_DOMAIN"
    cd $THIS_DIR/..
    docker run --rm --name copy_cert \
        -v "/etc/letsencrypt:/etc/letsencrypt" \
        bash \
        cat $CERTPATH/fullchain.pem $CERTPATH/privkey.pem > $SSL_CERTIFICATE
    if [ -z "$FORCE_CERTBOT_RENEW_NO_START_PROXY" ]; then
        ./pavics-compose.sh start proxy
    fi
    cd $SAVED_PWD
else
    set +x
    echo "
What to do next:

CERTPATH=\"/etc/letsencrypt/live/$CERT_DOMAIN\"
cd $THIS_DIR/..
sudo cat \$CERTPATH/fullchain.pem \$CERTPATH/privkey.pem > $SSL_CERTIFICATE
openssl x509 -noout -text -in $SSL_CERTIFICATE
./pavics-compose.sh up -d
"
fi

exit $RC
