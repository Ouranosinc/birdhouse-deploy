#!/bin/sh

# All env in this default.env can be overridden by env.local.

# All env in this default.env must NOT depend on any other env.  If they do, they
# must use single quotes to avoid early expansion before overrides in env.local
# are applied and must be added to the list of DELAYED_EVAL.

# add any new variables not already in 'VARS' or 'OPTIONAL_VARS' that must be replaced in templates here
# single quotes are important in below list to keep variable names intact until 'pavics-compose' parses them
EXTRA_VARS='
  $TEST_NOTEBOOK
  $COWBIRD_JUPYTER_ACCESS_DIR
'
# extend the original 'VARS' from 'birdhouse/pavics-compose.sh' to employ them for template substitution
# adding them to 'VARS', they will also be validated in case of override of 'default.env' using 'env.local'
VARS="$VARS $EXTRA_VARS"

export TEST_NOTEBOOK="test_cowbird_jupyter.ipynb"

THIS_FILE="`realpath "$0"`"
export COWBIRD_JUPYTER_ACCESS_DIR="`dirname "$THIS_FILE"`/optional-components/cowbird-jupyter-access"

export JUPYTERHUB_CONFIG_OVERRIDE="
c.JupyterHub.services = [
    {
        'name': 'service-admin',
        'api_token': 'admin-token',
    },
]
c.JupyterHub.load_roles = [
    {
        'name': 'service-role',
        'scopes': [
            # specify the permissions the token should have
            'admin:users',
            'admin:servers',
            'access:servers',
            'proxy'
        ],
        'services': [
            # assign the service the above permissions
            'service-admin',
        ],
    }
]
c.DockerSpawner.volumes[join(os.environ['COWBIRD_JUPYTER_ACCESS_DIR'], os.environ['TEST_NOTEBOOK'])] = {
    'bind': join(notebook_dir, os.environ['TEST_NOTEBOOK']),
    'mode': 'ro'
}
"
