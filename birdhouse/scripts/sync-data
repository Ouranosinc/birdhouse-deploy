#!/bin/sh
# Sync relevant data from another host.
#
# Useful to prepare a new replacement host or to keep a staging host up-to-date.
#
# Data specific to a host (logs, metrics, tokens, ...) are excluded.
#
# Thredds data also excluded since it is huge.
#
# Assume
# * ssh passwordless to source host is setup properly

THIS_FILE="`realpath "$0"`"
THIS_DIR="`dirname "$THIS_FILE"`"
COMPOSE_DIR="`dirname "$THIS_DIR"`"

# source default.env, else might have errors sourcing env.local
if [ -f "$COMPOSE_DIR/default.env" ]; then
    . "${COMPOSE_DIR}/default.env"
fi

if [ -f "$COMPOSE_DIR/env.local" ]; then
    # Get DATA_PERSIST_ROOT
    . "${COMPOSE_DIR}/env.local"
fi


SOURCE_HOST="$1"; shift
FORCE_MODE="$1"

if [ -z "$SOURCE_HOST" ]; then
    echo "ERROR: no source host provided" 1>&2
    exit 2
fi

if [ ! x"$FORCE_MODE" = xforce ]; then
    # Default to dry-run
    SYNC_DATA_EXTRA_RSYNC_OPTS="$SYNC_DATA_EXTRA_RSYNC_OPTS --dry-run"
fi


RSYNC_BASE_CMD="rsync --recursive --links --hard-links --times \
    --itemize-changes --human-readable --delete --stats \
    --progress $SYNC_DATA_EXTRA_RSYNC_OPTS"

set -x

#for item in $GEOSERVER_DATA_DIR/ $JUPYTERHUB_USER_DATA_DIR/ $MAGPIE_PERSIST_DIR/; do
for item in $GEOSERVER_DATA_DIR/; do
    # Assume DATA_PERSIST_ROOT is same between both hosts !
    $RSYNC_BASE_CMD $SOURCE_HOST:$item $item
done

$COMPOSE_DIR/deployment/fix-geoserver-data-dir-perm
